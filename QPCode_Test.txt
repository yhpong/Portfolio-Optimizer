Sub Test_MinDownRisk()
Dim i As Long, j As Long, k As Long, m As Long, n As Long, n_T As Long, n_group As Long
Dim iterate As Long, iter_max As Long
Dim x_covar() As Double, x_r() As Double, x_r_mean() As Double, r_tgt As Double, vol_tgt As Double, var_tgt As Double
Dim x() As Double, y() As Double
Dim x_l() As Double, x_u() As Double, C_u() As Double, c_max() As Double, C_l() As Double, c_min() As Double
Dim C() As Double, r_min As Double, xArr() As Double
Dim mywkbk As Workbook
Dim cOPT As cIPOPT
Dim QQ() As Double, q() As Double

    Set cOPT = New cIPOPT
    Set mywkbk = ActiveWorkbook
    Application.ScreenUpdating = False
    With mywkbk.Sheets("Sheet2")
        n = 6
        n_T = 21
        ReDim x_r(1 To n_T, 1 To n)
        ReDim x_r_mean(1 To n)
        For j = 1 To n
            x_r_mean(j) = .Cells(28, 2 + j).Value
            For i = 1 To n_T
                x_r(i, j) = .Cells(5 + i, 2 + j).Value
            Next i
        Next j
        r_tgt = .Range("C2").Value
        vol_tgt = .Range("C3").Value
    End With

    ReDim C(1 To n_T, 1 To n + n_T)
    For i = 1 To n_T
        C(i, n + i) = -1
        For j = 1 To n
            C(i, j) = -x_r(i, j)
        Next j
    Next i
    

    ReDim QQ(1 To n + n_T, 1 To n + n_T)
    ReDim q(1 To n + n_T)
    For i = 1 To n_T
        QQ(n + i, n + i) = 1
    Next i
    
    ReDim x(1 To n + n_T)
    ReDim x_l(1 To n + n_T)
    ReDim x_u(1 To n + n_T)
    For i = 1 To n
        x(i) = 1# / n
        x_l(i) = 0.05
        x_u(i) = 1
    Next i
    For i = 1 To n_T
        x_l(n + i) = 0
        x_u(n + i) = 100
    Next i

    ReDim A(1 To 1, 1 To n + n_T)
    ReDim B(1 To 1)
    For i = 1 To n
        A(1, i) = 1
    Next i
    B(1) = 1

    Call cOPT.QPSolve(x, QQ, q, A, B, x_u, x_l, C, -r_tgt)
    y = x: ReDim Preserve y(1 To n)
    Call Calc_Risk_Return(xArr, y, x_r, x_r_mean, r_tgt)
    With mywkbk.Sheets("Sheet2")
        .Range("C32:H65").ClearContents
        .Range("C32").Resize(1, UBound(y)).Value = y
        .Range("K32").Resize(1, UBound(xArr)).Value = xArr
    End With
    
    r_min = 0
    For i = 1 To n
        r_min = r_min + x(i) * x_r_mean(i)
    Next i
    
    iter_max = 30
    ReDim A(1 To 2, 1 To n + n_T)
    ReDim B(1 To 2)
    For i = 1 To n
        A(1, i) = 1
        A(2, i) = x_r_mean(i)
    Next i
    B(1) = 1

    For iterate = 1 To iter_max
        B(2) = r_min * 0.9 + (iterate - 1) * (0.12 - r_min * 0.9) / (iter_max - 1)
        If cOPT.QPSolve(x, QQ, q, A, B, x_u, x_l, C, -r_tgt) = True Then
            y = x: ReDim Preserve y(1 To n)
            Call Calc_Risk_Return(xArr, y, x_r, x_r_mean, r_tgt)
            With mywkbk.Sheets("Sheet2")
                .Range("C" & 32 + iterate).Resize(1, UBound(y)).Value = y
                .Range("K" & 32 + iterate).Resize(1, UBound(xArr)).Value = xArr
            End With
        End If
    Next iterate
    
    Set mywkbk = Nothing
    Set cOPT = Nothing
    Application.ScreenUpdating = True
End Sub



Function EF_MinRisk_Down(x_frontier() As Double, port_wgt() As Double, _
            x_r() As Double, x_r_mean() As Double, r_threshold As Double) As Boolean
Dim i As Long, j As Long, k As Long, m As Long, n As Long, n_T As Long, n_group As Long
Dim iterate As Long, iter_max As Long
Dim x_covar() As Double, x_r() As Double, x_r_mean() As Double
Dim x() As Double, y() As Double
Dim x_l() As Double, x_u() As Double, C_u() As Double, c_max() As Double, C_l() As Double, c_min() As Double
Dim C() As Double, r_min As Double
Dim mywkbk As Workbook
Dim cOPT As cIPOPT
Dim QQ() As Double, q() As Double
    EF_MinRisk_Down = False
    n_T = UBound(x_r, 1)
    n = UBound(x_r, 2)
    ReDim C(1 To n_T, 1 To n + n_T)
    For i = 1 To n_T
        C(i, n + i) = -1
        For j = 1 To n
            C(i, j) = -x_r(i, j)
        Next j
    Next i
    

    ReDim QQ(1 To n + n_T, 1 To n + n_T)
    ReDim q(1 To n + n_T)
    For i = 1 To n_T
        QQ(n + i, n + i) = 1
    Next i
    
    ReDim x(1 To n + n_T)
    ReDim x_l(1 To n + n_T)
    ReDim x_u(1 To n + n_T)
    For i = 1 To n
        x(i) = 1# / n
        x_l(i) = 0
        x_u(i) = 1
    Next i
    For i = 1 To n_T
        x_l(n + i) = 0
        x_u(n + i) = 10
    Next i

    ReDim A(1 To 1, 1 To n + n_T)
    ReDim B(1 To 1)
    For i = 1 To n
        A(1, i) = 1
    Next i
    B(1) = 1

    If cOPT.QPSolve(x, QQ, q, A, B, x_u, x_l, C, -r_threshold) = False Then
        Erase A, B, C
        Exit Function
    End If
    
    port_wgt = x: ReDim Preserve port_wgt(1 To n)
    Call Calc_Risk_Return(x_frontier, port_wgt, x_r, x_r_mean, r_threshold)
    
    Set cOPT = Nothing
    Erase A, B, C
    EF_MinRisk_Down = True
End Function


Sub Calc_Risk_Return(x_frontier() As Double, x() As Double, x_r() As Double, x_r_mean() As Double, r_threshold As Double)
Dim i As Long, j As Long, n As Long, n_T As Long
Dim tmp_x As Double, tmp_y As Double
    ReDim x_frontier(1 To 2)
    n = UBound(x_r, 2)
    n_T = UBound(x_r, 1)
    tmp_y = 0
    For i = 1 To n_T
        tmp_x = 0
        For j = 1 To n
            tmp_x = tmp_x + x_r(i, j) * x(j)
        Next j
        If tmp_x < r_threshold Then
            tmp_y = tmp_y + (r_threshold - tmp_x) ^ 2
        End If
    Next i
    tmp_x = 0
    For i = 1 To n
        tmp_x = tmp_x + x(i) * x_r_mean(i)
    Next i
    x_frontier(1) = Sqr(tmp_y / n_T)
    x_frontier(2) = tmp_x
End Sub
